<?xml version="1.0" encoding="utf-8" ?>

<chapter id="installation">
  <title>Installing PHPUnit</title>

  <note>
    <para>
      PHPUnit 4.0 requires PHP 5.3.3; using the latest version of PHP is highly
      recommended.
    </para>

    <para>
      For code coverage support, <ulink url="http://xdebug.org/">Xdebug</ulink>
      2.1.3 is required; using the latest version of Xdebug is highly
      recommended.
    </para>
  </note>

  <section id="installation.phar">
    <title>PHP Archive (PHAR)</title>

    <para>
      The easiest way to obtain PHPUnit is to download a <ulink
      url="http://php.net/phar">PHP Archive (PHAR)</ulink> that has all required
      (as well as some optional) dependencies of PHPUnit bundled in a single
      file:
    </para>

    <screen><userinput>wget https://phar.phpunit.de/phpunit.phar</userinput>
<userinput>chmod +x phpunit.phar</userinput>
<userinput>mv phpunit.phar /usr/local/bin/phpunit</userinput></screen>

    <para>
      You can also immediately use the PHAR after you have downloaded it, of
      course:
    </para>

    <screen><userinput>wget https://phar.phpunit.de/phpunit.phar</userinput>
<userinput>php phpunit.phar</userinput></screen>
  </section>

  <section id="installation.composer">
    <title>Composer</title>

    <para>
      Simply add a dependency on <literal>phpunit/phpunit</literal> to your
      project's <literal>composer.json</literal> file if you use
      <ulink url="http://getcomposer.org/">Composer</ulink> to manage the
      dependencies of your project. Here is a minimal example of a
      <literal>composer.json</literal> file that just defines a development-time
      dependency on PHPUnit 4.0:
    </para>

    <programlisting><![CDATA[{
    "require-dev": {
        "phpunit/phpunit": "4.0.*"
    }
}]]></programlisting>

    <para>
      For a system-wide installation via Composer, you can run:
    </para>

    <screen><userinput>composer global require 'phpunit/phpunit=4.0.*'</userinput></screen>

    <para>
      Make sure you have <literal>~/.composer/vendor/bin/</literal> in your
      path.
    </para>
  </section>

  <section id="installation.optional-packages">
    <title>Optional packages</title>

    <para>
      The following optional packages are available:
    </para>

    <variablelist>
      <varlistentry>
        <term>
          <literal>PHP_Invoker</literal>
        </term>

        <listitem>
          <para>
            A utility class for invoking callables with a timeout. This package is
            required to enforce test timeouts in strict mode.
          </para>

          <para>
            This package is included in the PHAR distribution of PHPUnit. It can
            be installed via Composer by adding the following
            <literal>"require-dev"</literal> dependency:
          </para>

          <screen><userinput>"phpunit/php-invoker": "*"</userinput></screen>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>
          <literal>DbUnit</literal>
        </term>

        <listitem>
          <para>
            DbUnit port for PHP/PHPUnit to support database interaction testing.
          </para>

          <para>
            This package is included in the PHAR distribution of PHPUnit. It can
            be installed via Composer by adding the following
            <literal>"require-dev"</literal> dependency:
          </para>

          <screen><userinput>"phpunit/dbunit": ">=1.2"</userinput></screen>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>
          <literal>PHPUnit_Selenium</literal>
        </term>

        <listitem>
          <para>
            Selenium RC integration for PHPUnit.
          </para>

          <para>
            This package is included in the PHAR distribution of PHPUnit. It can
            be installed via Composer by adding the following
            <literal>"require-dev"</literal> dependency:
          </para>

          <screen><userinput>"phpunit/phpunit-selenium": ">=1.2"</userinput></screen>
        </listitem>
      </varlistentry>
    </variablelist>
  </section>

  <section id="installing.upgrading">
    <title>Upgrading</title>

    <para>
      This section serves as a collection of minor BC issues that one might
      run into when upgrading from PHPUnit 3.7 to PHPUnit 4.0.
    </para>

    <itemizedlist>
      <listitem>
        <para>
          The limited support for <ulink
          url="http://sebastian-bergmann.de/blog/883-Stubbing-and-Mocking-Static-Methods.html">stubbing
          and mocking static methods</ulink> that was introduced in PHPUnit 3.5
          has been removed. This feature only worked when the stubbed or mocked
          static method was invoked from another method of the same class. We
          believe that the limited use of this feature did not justify the
          increased complexity in the test doubles code generator it incurred.
          We apologize for any inconvenience this removal may cause and
          encourage refactoring the code under test to not require this feature
          for testing.
        </para>
      </listitem>

      <listitem>
        <para>
          The <code>addRiskyTest()</code> was added to the
          <code>PHPUnit_Framework_TestListener</code> interface. Classes that
          implement this interface have to implement this new method. This is
          the reason why PHPStorm 7 is not compatible with PHPUnit 4, for
          instance.
        </para>
      </listitem>

      <listitem>
        <para>
          The fixes for <ulink url="https://github.com/sebastianbergmann/phpunit/issues/552">#552</ulink>,
          <ulink url="https://github.com/sebastianbergmann/phpunit/issues/573">#573</ulink>,
          and <ulink url="https://github.com/sebastianbergmann/phpunit/issues/582">#582</ulink>
          required a change to how relative paths are resolved for PHPUnit's XML
          configuration file. All relative paths in a configuration file are now
          resolved relative to that configuration file. When upgrading, you may
          need to update relative paths for the following configurations
          <code>testSuiteLoaderFile</code>, <code>printerFile</code>,
          <code>testsuites/file</code>, and <code>testsuites/exclude</code>.
        </para>
      </listitem>

      <listitem>
        <para>
          <ulink url="https://github.com/sebastianbergmann/phpunit/commit/f5df97cda0b25f2b7368395344da095ac529de62">The
          numeric comparator is no longer invoked when provided with two
          strings</ulink>.
        </para>
      </listitem>
    </itemizedlist>

    <para>
      Please note that starting with PHPUnit 4.0.0 the PEAR package of PHPUnit
      is merely a distribution mechanism for the PHP Archive (PHAR) and that
      many of PHPUnit's dependencies will no longer be released individually via
      PEAR. We will eventually stop making releases of PHPUnit available via
      PEAR altogether.
    </para>

    <para>
      Please note that using the PEAR installer to update from PHPUnit 3.7 to
      PHPUnit 4.0 will leave stale source files from previous versions of
      PHPUnit's dependencies (PHP_CodeCoverage, PHPUnit_MockObject, ...) behind
      in your PHP environment's PEAR directory. It is advised to uninstall the
      respective PEAR packages.
    </para>
  </section>
</chapter>
