<?xml version="1.0" encoding="utf-8" ?>

<chapter id="installation">
  <title>PHPUnit のインストール</title>

  <note>
    <para>
      PHPUnit 4.0 は PHP 5.3.3 以降のバージョンで動作しますが、最新版の PHP
      を使うことを強く推奨します。
    </para>

    <para>
      コードカバレッジをサポートするには <ulink url="http://xdebug.org/">Xdebug</ulink>
      2.1.3 以降が必要です。
      しかし、最新版の Xdebug を使うことを強く推奨します。
    </para>
  </note>

  <section id="installation.phar">
    <title>PHP Archive (PHAR)</title>

    <para>
      PHPUnit を入手する一番簡単な方法は、<ulink
      url="http://php.net/phar">PHP Archive (PHAR)</ulink> をダウンロードすることです。
      必要な依存コンポーネントがすべて (オプションのコンポーネントの一部も含めて)
      ひとつのファイルにまとめられています。
    </para>

    <screen><userinput>wget https://phar.phpunit.de/phpunit.phar</userinput>
<userinput>chmod +x phpunit.phar</userinput>
<userinput>mv phpunit.phar /usr/local/bin/phpunit</userinput></screen>

    <para>
      もちろん、ダウンロードした PHAR をそのまますぐに使ってもかまいません。
    </para>

    <screen><userinput>wget https://phar.phpunit.de/phpunit.phar</userinput>
<userinput>php phpunit.phar</userinput></screen>
  </section>

  <section id="installation.composer">
    <title>Composer</title>

    <para>
      <ulink url="http://getcomposer.org/">Composer</ulink>
      を使ってプロジェクトの依存関係を管理するには、
      <literal>phpunit/phpunit</literal> への依存情報をプロジェクトの
      <filename>composer.json</filename> ファイルに追加します。
      次に示すのは最小限の
      <filename>composer.json</filename> ファイルの例で、
      開発時の PHPUnit 4.0 への依存を定義しています。
    </para>

    <programlisting><![CDATA[{
    "require-dev": {
        "phpunit/phpunit": "4.0.*"
    }
}]]></programlisting>

    <para>
      システム全体で使えるように Composer でインストールするには、次のようにします。
    </para>

    <screen><userinput>composer global require 'phpunit/phpunit=4.0.*'</userinput></screen>

    <para>
      <literal>~/.composer/vendor/bin/</literal> にパスを通すことを忘れないようにしましょう。
    </para>
  </section>

  <section id="installation.optional-packages">
    <title>オプションのパッケージ</title>

    <para>
      オプションのパッケージとして、これらが使えます。
    </para>

    <variablelist>
      <varlistentry>
        <term>
          <literal>PHP_Invoker</literal>
        </term>

        <listitem>
          <para>
            callable をタイムアウトつきで実行するユーティリティクラス。
            テストのタイムアウトを厳格に指定するために必要なパッケージ。
          </para>

          <para>
            このパッケージは、PHPUnit の PHAR 版の中に含まれています。
            Composer でインストールするには、
            <literal>"require-dev"</literal>
            に次の行を追加します。
          </para>

          <screen><userinput>"phpunit/php-invoker": "*"</userinput></screen>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>
          <literal>DbUnit</literal>
        </term>
        <listitem>
          <para>
            DbUnit の PHP/PHPUnit 向けの移植。データベースとのやりとりをテスト可能にする。
          </para>

          <para>
            このパッケージは、PHPUnit の PHAR 版の中に含まれています。
            Composer でインストールするには、
            <literal>"require-dev"</literal>
            に次の行を追加します。
          </para>

          <screen><userinput>"phpunit/dbunit": ">=1.2"</userinput></screen>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>
          <literal>PHPUnit_Selenium</literal>
        </term>
        <listitem>
          <para>
            PHPUnit 用の Selenium RC インテグレーション。
          </para>

          <para>
            このパッケージは、PHPUnit の PHAR 版の中に含まれています。
            Composer でインストールするには、
            <literal>"require-dev"</literal>
            に次の行を追加します。
          </para>

          <screen><userinput>"phpunit/phpunit-selenium": ">=1.2"</userinput></screen>
        </listitem>
      </varlistentry>
    </variablelist>
  </section>

  <section id="installing.upgrading">
    <title>アップグレード</title>

    <para>
      PHPUnit 3.7 から PHPUnit 4.0 へのアップグレードの際に出くわすことになる、
      過去との互換性に関するちょっとした問題をまとめます。
    </para>

    <itemizedlist>
      <listitem>
        <para>
          The limited support for <ulink
          url="http://sebastian-bergmann.de/blog/883-Stubbing-and-Mocking-Static-Methods.html">stubbing
          and mocking static methods</ulink> that was introduced in PHPUnit 3.5
          has been removed. This feature only worked when the stubbed or mocked
          static method was invoked from another method of the same class. We
          believe that the limited use of this feature did not justify the
          increased complexity in the test doubles code generator it incurred.
          We apologize for any inconvenience this removal may cause and
          encourage refactoring the code under test to not require this feature
          for testing.
        </para>
      </listitem>

      <listitem>
        <para>
          The <code>addRiskyTest()</code> was added to the
          <code>PHPUnit_Framework_TestListener</code> interface. Classes that
          implement this interface have to implement this new method. This is
          the reason why PHPStorm 7 is not compatible with PHPUnit 4, for
          instance.
        </para>
      </listitem>

      <listitem>
        <para>
          The fixes for <ulink url="https://github.com/sebastianbergmann/phpunit/issues/552">#552</ulink>,
          <ulink url="https://github.com/sebastianbergmann/phpunit/issues/573">#573</ulink>,
          and <ulink url="https://github.com/sebastianbergmann/phpunit/issues/582">#582</ulink>
          required a change to how relative paths are resolved for PHPUnit's XML
          configuration file. All relative paths in a configuration file are now
          resolved relative to that configuration file. When upgrading, you may
          need to update relative paths for the following configurations
          <code>testSuiteLoaderFile</code>, <code>printerFile</code>,
          <code>testsuites/file</code>, and <code>testsuites/exclude</code>.
        </para>
      </listitem>

      <listitem>
        <para>
          <ulink url="https://github.com/sebastianbergmann/phpunit/commit/f5df97cda0b25f2b7368395344da095ac529de62">The
          numeric comparator is no longer invoked when provided with two
          strings</ulink>.
        </para>
      </listitem>
    </itemizedlist>

    <para>
      Please note that starting with PHPUnit 4.0.0 the PEAR package of PHPUnit
      is merely a distribution mechanism for the PHP Archive (PHAR) and that
      many of PHPUnit's dependencies will no longer be released individually via
      PEAR. We will eventually stop making releases of PHPUnit available via
      PEAR altogether.
    </para>

    <para>
      Please note that using the PEAR installer to update from PHPUnit 3.7 to
      PHPUnit 4.0 will leave stale source files from previous versions of
      PHPUnit's dependencies (PHP_CodeCoverage, PHPUnit_MockObject, ...) behind
      in your PHP environment's PEAR directory. It is advised to uninstall the
      respective PEAR packages.
    </para>
  </section>
</chapter>
